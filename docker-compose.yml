# Reusable configuration blocks
x-n8n-common: &n8n-common
  image: docker.n8n.io/n8nio/n8n:latest
  networks: ['n8n-network']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${N8N_DB_USER}
    - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
    - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
    - N8N_PORT=5678
    - N8N_PROTOCOL=https
    - NODE_ENV=production
    - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
    - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    - N8N_DIAGNOSTICS_ENABLED=${N8N_DIAGNOSTICS_ENABLED:-false}
    - N8N_PERSONALIZATION_ENABLED=${N8N_PERSONALIZATION_ENABLED:-false}
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_JWT_SECRET}
    - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
  env_file:
    - path: .env
      required: true

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: ${COMPOSE_PROJECT_NAME:-n8n}-postgres
    networks: ['n8n-network']
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      N8N_DB_USER: ${N8N_DB_USER}
      N8N_DB_PASSWORD: ${N8N_DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  caddy:
    image: caddy:2-alpine
    hostname: caddy
    container_name: ${COMPOSE_PROJECT_NAME:-n8n}-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ${DATA_FOLDER}/caddy_config/Caddyfile:/etc/caddy/Caddyfile:ro
    networks:
      - n8n-network
    environment:
      - CADDY_ADMIN=0.0.0.0:2019
      - SUBDOMAIN=${SUBDOMAIN}          
      - DOMAIN_NAME=${DOMAIN_NAME}      
    healthcheck:
      test: ["CMD", "caddy", "version"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n:
    <<: *n8n-common
    hostname: n8n
    container_name: ${COMPOSE_PROJECT_NAME:-n8n}-app
    restart: unless-stopped
    volumes:
      - n8n_data:/home/node/.n8n
      - ${DATA_FOLDER}/local_files:/files
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  caddy_data:
    name: "${COMPOSE_PROJECT_NAME:-n8n}_caddy_data"
  caddy_config:
    name: "${COMPOSE_PROJECT_NAME:-n8n}_caddy_config"
  n8n_data:
    name: "${COMPOSE_PROJECT_NAME:-n8n}_n8n_data"
  postgres_data:
    name: "${COMPOSE_PROJECT_NAME:-n8n}_postgres_data"

networks:
  n8n-network:
    name: "${COMPOSE_PROJECT_NAME:-n8n}_network"
    driver: bridge
